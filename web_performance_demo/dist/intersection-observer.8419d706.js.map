{"version":3,"sources":["src/intersection-observer.js"],"names":["scroller","document","querySelector","sentinel","cc","counter","loadItems","n","i","newItem","createElement","classList","add","textContent","appendChild","intersectionObserver","IntersectionObserver","entries","intersectionRatio","innerHTML","observe","imgContainer","space","loadImage","img","src","imageObserver"],"mappings":"AAAA;AACA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;AACA,IAAME,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAX;AACA,IAAIG,OAAO,GAAG,CAAd;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B,QAAIC,OAAO,GAAGR,QAAQ,CAACS,aAAT,CAAuB,KAAvB,CAAd;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AACAH,IAAAA,OAAO,CAACI,WAAR,GAAsB,UAAUR,OAAO,EAAvC;AACAL,IAAAA,QAAQ,CAACc,WAAT,CAAqBL,OAArB;AACD;AACF;;AAED,IAAMM,oBAAoB,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AAC/D;AACA;AACA,MAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,iBAAX,IAAgC,CAApC,EAAuC;AACrC;AACD;;AACDZ,EAAAA,SAAS,CAAC,EAAD,CAAT,CAN+D,CAO/D;;AACAN,EAAAA,QAAQ,CAACc,WAAT,CAAqBX,QAArB;AACAG,EAAAA,SAAS,CAAC,CAAD,CAAT;AACAF,EAAAA,EAAE,CAACe,SAAH,0BAA+Bd,OAA/B;AACD,CAX4B,CAA7B,EAYA;;AACAU,oBAAoB,CAACK,OAArB,CAA6BjB,QAA7B,GAEA;AACA;AACA;;AACA,IAAMkB,YAAY,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAArB;AACA,IAAMoB,KAAK,GAAGrB,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAd;;AAEA,SAASqB,SAAT,CAAmBhB,CAAnB,EAAsB;AACpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B,QAAIgB,GAAG,GAAGvB,QAAQ,CAACS,aAAT,CAAuB,KAAvB,CAAV;AACAc,IAAAA,GAAG,CAACC,GAAJ,GAAU,iCAAV;AACAJ,IAAAA,YAAY,CAACP,WAAb,CAAyBU,GAAzB;AACD;AACF;;AAED,IAAME,aAAa,GAAG,IAAIV,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AACxD,MAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,iBAAX,IAAgC,CAApC,EAAuC;AACrC;AACD;;AACDZ,EAAAA,SAAS,CAAC,EAAD,CAAT,CAJwD,CAKxD;;AACAN,EAAAA,QAAQ,CAACc,WAAT,CAAqBX,QAArB;AACAG,EAAAA,SAAS,CAAC,CAAD,CAAT;AACAF,EAAAA,EAAE,CAACe,SAAH,0BAA+Bd,OAA/B;AACD,CATqB,CAAtB","file":"intersection-observer.8419d706.js","sourceRoot":"..","sourcesContent":["// Intersection observer on a div\nconst scroller = document.querySelector('#scroller');\nconst sentinel = document.querySelector('#sentinel');\nconst cc = document.querySelector('#counter')\nlet counter = 1;\n\nfunction loadItems(n) {\n  for (let i = 0; i < n; i++) {\n    let newItem = document.createElement('div');\n    newItem.classList.add('item');\n    newItem.textContent = 'Item ' + counter++;\n    scroller.appendChild(newItem);\n  }\n}\n\nconst intersectionObserver = new IntersectionObserver(entries => {\n  // If intersectionRatio is 0, the sentinel is out of view\n  // and we do not need to do anything.\n  if (entries[0].intersectionRatio <= 0) {\n    return;\n  }\n  loadItems(10);\n  // appendChild will move the existing element\n  scroller.appendChild(sentinel);\n  loadItems(5);\n  cc.innerHTML = `Already Load ${counter}`\n});\n// Observe element\nintersectionObserver.observe(sentinel);\n\n// Intersection observer to load images if it almost show up\n// code are same as above\n// http://placehold.jp/300x150.png\nconst imgContainer = document.querySelector('#image_container')\nconst space = document.querySelector('#no-image')\n\nfunction loadImage(n) {\n  for (let i = 0; i < n; i++) {\n    let img = document.createElement('img')\n    img.src = 'http://placehold.jp/300x150.png'\n    imgContainer.appendChild(img)\n  }\n}\n\nconst imageObserver = new IntersectionObserver(entries => {\n  if (entries[0].intersectionRatio <= 0) {\n    return;\n  }\n  loadItems(10);\n  // appendChild will move the existing element\n  scroller.appendChild(sentinel);\n  loadItems(5);\n  cc.innerHTML = `Already Load ${counter}`\n})"]}